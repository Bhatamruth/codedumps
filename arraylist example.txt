package javasample.arraylist.examples;
import java.util.ArrayList;
import java.util.List;
public class arraylist1 {




    public static void main(String[] args) {
        // Creating an ArrayList of String
        List<String> animals = new ArrayList<>();

        // Adding new elements to the ArrayList
        animals.add("Lion");
        animals.add("Tiger");
        animals.add("Cat");
        animals.add("Dog");

        System.out.println(animals);

        // Adding an element at a particular index in an ArrayList
        animals.add(2, "Elephant");

        System.out.println(animals);

    }
}


package javasample.arraylist.examples;
import java.util.ArrayList;
import java.util.List;

public class arraylist2 {

	    public static void main(String[] args) {
	        List<Integer> firstFivePrimeNumbers = new ArrayList<>();
	        firstFivePrimeNumbers.add(2);
	        firstFivePrimeNumbers.add(3);
	        firstFivePrimeNumbers.add(5);
	        firstFivePrimeNumbers.add(7);
	        firstFivePrimeNumbers.add(11);

	        // Creating an ArrayList from another collection
	        List<Integer> firstTenPrimeNumbers = new ArrayList<>(firstFivePrimeNumbers);


	        List<Integer> nextFivePrimeNumbers = new ArrayList<>();
	        nextFivePrimeNumbers.add(13);
	        nextFivePrimeNumbers.add(17);
	        nextFivePrimeNumbers.add(19);
	        nextFivePrimeNumbers.add(23);
	        nextFivePrimeNumbers.add(29);

	        // Adding an entire collection to an ArrayList
	        firstTenPrimeNumbers.addAll(nextFivePrimeNumbers);

	        System.out.println(firstTenPrimeNumbers);
	    }
	}



package javasample.arraylist.examples;
import java.util.ArrayList;
import java.util.List;
public class arraylist3 {


	    public static void main(String[] args) {
	        List<String> topCompanies = new ArrayList<>();

	        // Check if an ArrayList is empty
	        System.out.println("Is the topCompanies list empty? : " + topCompanies.isEmpty());

	        topCompanies.add("Google");
	        topCompanies.add("Apple");
	        topCompanies.add("Microsoft");
	        topCompanies.add("Amazon");
	        topCompanies.add("Facebook");

	        // Find the size of an ArrayList
	        System.out.println("Here are the top " + topCompanies.size() + " companies in the world");
	        System.out.println(topCompanies);

	        // Retrieve the element at a given index
	        String bestCompany = topCompanies.get(0);
	        String secondBestCompany = topCompanies.get(1);
	        String lastCompany = topCompanies.get(topCompanies.size() - 1);

	        System.out.println("Best Company: " + bestCompany);
	        System.out.println("Second Best Company: " + secondBestCompany);
	        System.out.println("Last Company in the list: " + lastCompany);

	        // Modify the element at a given index
	        topCompanies.set(4, "Walmart");
	        System.out.println("Modified top companies list: " + topCompanies);
	    }
	
}



package javasample.arraylist.examples;
import java.util.ArrayList;
import java.util.List;
import java.util.function.Predicate;

public class arraylist4 {

	    public static void main(String[] args) {
	        List<String> programmingLanguages = new ArrayList<>();
	        programmingLanguages.add("C");
	        programmingLanguages.add("C++");
	        programmingLanguages.add("Java");
	        programmingLanguages.add("Kotlin");
	        programmingLanguages.add("Python");
	        programmingLanguages.add("Perl");
	        programmingLanguages.add("Ruby");

	        System.out.println("Initial List: " + programmingLanguages);

	        // Remove the element at index `5`
	        programmingLanguages.remove(5);
	        System.out.println("After remove(5): " + programmingLanguages);

	        // Remove the first occurrence of the given element from the ArrayList
	        // (The remove() method returns false if the element does not exist in the ArrayList)
	        boolean isRemoved = programmingLanguages.remove("Kotlin");
	        System.out.println("After remove(\"Kotlin\"): " + programmingLanguages);

	        // Remove all the elements that exist in a given collection
	        List<String> scriptingLanguages = new ArrayList<>();
	        scriptingLanguages.add("Python");
	        scriptingLanguages.add("Ruby");
	        scriptingLanguages.add("Perl");

	        programmingLanguages.removeAll(scriptingLanguages);
	        System.out.println("After removeAll(scriptingLanguages): " + programmingLanguages);

	        // Remove all the elements that satisfy the given predicate
	        programmingLanguages.removeIf(new Predicate<String>() {
	            @Override
	            public boolean test(String s) {
	                return s.startsWith("C");
	            }
	        });

	        /*
	            The above removeIf() call can also be written using lambda expression like this -
	            programmingLanguages.removeIf(s -> s.startsWith("C"))
	        */

	        System.out.println("After Removing all elements that start with \"C\": " + programmingLanguages);

	        // Remove all elements from the ArrayList
	        programmingLanguages.clear();
	        System.out.println("After clear(): " + programmingLanguages);
	    }
	}

package javasample.arraylist.examples;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;

public class arraylist5 {

	    public static void main(String[] args) {
	        List<String> tvShows = new ArrayList<>();
	        tvShows.add("Breaking Bad");
	        tvShows.add("Game Of Thrones");
	        tvShows.add("Friends");
	        tvShows.add("Prison break");

	        System.out.println("=== Iterate using Java 8 forEach and lambda ===");
	        tvShows.forEach(tvShow -> {
	            System.out.println(tvShow);
	        });

	        System.out.println("\n=== Iterate using an iterator() ===");
	        Iterator<String> tvShowIterator = tvShows.iterator();
	        while (tvShowIterator.hasNext()) {
	            String tvShow = tvShowIterator.next();
	            System.out.println(tvShow);
	        }

	        System.out.println("\n=== Iterate using an iterator() and Java 8 forEachRemaining() method ===");
	        tvShowIterator = tvShows.iterator();
	        tvShowIterator.forEachRemaining(tvShow -> {
	            System.out.println(tvShow);
	        });

	        System.out.println("\n=== Iterate using a listIterator() to traverse in both directions ===");
	        // Here, we start from the end of the list and traverse backwards.
	        ListIterator<String> tvShowListIterator = tvShows.listIterator(tvShows.size());
	        while (tvShowListIterator.hasPrevious()) {
	            String tvShow = tvShowListIterator.previous();
	            System.out.println(tvShow);
	        }

	        System.out.println("\n=== Iterate using simple for-each loop ===");
	        for(String tvShow: tvShows) {
	            System.out.println(tvShow);
	        }

	        System.out.println("\n=== Iterate using for loop with index ===");
	        for(int i = 0; i < tvShows.size(); i++) {
	            System.out.println(tvShows.get(i));
	        }
	    }
	}

package javasample.arraylist.examples;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class arraylist6 {

	    public static void main(String[] args) {
	        List<Integer> numbers = new ArrayList<>();
	        numbers.add(13);
	        numbers.add(18);
	        numbers.add(25);
	        numbers.add(40);

	        Iterator<Integer> numbersIterator = numbers.iterator();
	        while (numbersIterator.hasNext()) {
	            Integer num = numbersIterator.next();
	            if(num % 2 != 0) {
	                numbersIterator.remove();
	            }
	        }

	        System.out.println(numbers);
	    }
	}

